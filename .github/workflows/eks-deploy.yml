name: EKS Multi-Tenant CI/CD

on:
  workflow_dispatch:
    inputs:
      tenant:
        description: 'Tenant Name'
        required: true
      environment:
        description: 'Environment (dev, uat, prod)'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      AWS_ACCOUNT_ID: 746669234841

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

    - name: Build Docker Image
      run: |
        IMAGE_NAME=${{ github.event.inputs.tenant }}-${{ github.event.inputs.environment }}-nginx
        docker build -t $IMAGE_NAME .

    - name: Tag Docker Image
      run: |
        IMAGE_NAME=${{ github.event.inputs.tenant }}-${{ github.event.inputs.environment }}-nginx
        docker tag $IMAGE_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/testing/roger:latest

    - name: Push Docker Image
      run: |
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/testing/roger:latest

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform init -backend-config="key=terraform-state/${{ github.event.inputs.tenant }}-${{ github.event.inputs.environment }}/eks.tfstate"

    - name: Terraform Workspace
      run: |
        terraform workspace new ${{ github.event.inputs.tenant }}-${{ github.event.inputs.environment }} || terraform workspace select ${{ github.event.inputs.tenant }}-${{ github.event.inputs.environment }}

    - name: Terraform Apply
      run: terraform apply -var-file="tenant-${{ github.event.inputs.environment }}.tfvars" -auto-approve
